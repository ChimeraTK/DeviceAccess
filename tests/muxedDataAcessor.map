# A typical DMA example: 32 bytes per block, 16 bit words
TEST.AREA_MULTIPLEXED_SEQUENCE_DMA 64 0 128 0xD 16 -2 1
TEST.SEQUENCE_DMA_0 1 0x00 2 0xD 16  0 0
TEST.SEQUENCE_DMA_1 1 0x02 2 0xD 16  0 0
TEST.SEQUENCE_DMA_2 1 0x04 2 0xD 16  0 0
TEST.SEQUENCE_DMA_3 1 0x06 2 0xD 16  0 0
TEST.SEQUENCE_DMA_4 1 0x08 2 0xD 16  0 0
TEST.SEQUENCE_DMA_5 1 0x0A 2 0xD 16  0 0
TEST.SEQUENCE_DMA_6 1 0x0C 2 0xD 16  0 0
TEST.SEQUENCE_DMA_7 1 0x0E 2 0xD 16  0 0
TEST.SEQUENCE_DMA_8 1 0x10 2 0xD 16  0 0
TEST.SEQUENCE_DMA_9 1 0x12 2 0xD 16  0 0
TEST.SEQUENCE_DMA_10 1 0x14 2 0xD 16  0 0
TEST.SEQUENCE_DMA_11 1 0x16 2 0xD 16  0 0
TEST.SEQUENCE_DMA_12 1 0x18 2 0xD 16  0 0
TEST.SEQUENCE_DMA_13 1 0x1A 2 0xD 16  0 0
TEST.SEQUENCE_DMA_14 1 0x1C 2 0xD 16  0 0
TEST.SEQUENCE_DMA_15 1 0x1E 2 0xD 16  0 0  
 

#The area which is foreseen for DMA transfer can also be accessed via normal
#read/write. As the driver does not DMA control registers in bar 2, we use it
#for this purpose. 
AREA_DMAABLE                     0x00000400   0x00000000    0x00001000    0x2

# The same sequence as the DMA sequence above, just accessed via normal read/write
TEST.AREA_MULTIPLEXED_SEQUENCE_NODMA 64 0 128 0x2 16 -2 1
TEST.SEQUENCE_NODMA_0 1 0x00 2 0x2 16  0 0
TEST.SEQUENCE_NODMA_1 1 0x02 2 0x2 16  0 0
TEST.SEQUENCE_NODMA_2 1 0x04 2 0x2 16  0 0
TEST.SEQUENCE_NODMA_3 1 0x06 2 0x2 16  0 0
TEST.SEQUENCE_NODMA_4 1 0x08 2 0x2 16  0 0
TEST.SEQUENCE_NODMA_5 1 0x0A 2 0x2 16  0 0
TEST.SEQUENCE_NODMA_6 1 0x0C 2 0x2 16  0 0
TEST.SEQUENCE_NODMA_7 1 0x0E 2 0x2 16  0 0
TEST.SEQUENCE_NODMA_8 1 0x10 2 0x2 16  0 0
TEST.SEQUENCE_NODMA_9 1 0x12 2 0x2 16  0 0
TEST.SEQUENCE_NODMA_10 1 0x14 2 0x2 16  0 0
TEST.SEQUENCE_NODMA_11 1 0x16 2 0x2 16  0 0
TEST.SEQUENCE_NODMA_12 1 0x18 2 0x2 16  0 0
TEST.SEQUENCE_NODMA_13 1 0x1A 2 0x2 16  0 0
TEST.SEQUENCE_NODMA_14 1 0x1C 2 0x2 16  0 0
TEST.SEQUENCE_NODMA_15 1 0x1E 2 0x2 16  0 0  

# The same sequence as the DMA sequence above, just accessed via normal read/write
TEST.AREA_MULTIPLEXED_SEQUENCE_NODMAASYNC 64 0 128 0x2 16 -2 1   INTERRUPT6
TEST.SEQUENCE_NODMAASYNC_0 1 0x00 2 0x2 16  0 0
TEST.SEQUENCE_NODMAASYNC_1 1 0x02 2 0x2 16  0 0
TEST.SEQUENCE_NODMAASYNC_2 1 0x04 2 0x2 16  0 0
TEST.SEQUENCE_NODMAASYNC_3 1 0x06 2 0x2 16  0 0
TEST.SEQUENCE_NODMAASYNC_4 1 0x08 2 0x2 16  0 0
TEST.SEQUENCE_NODMAASYNC_5 1 0x0A 2 0x2 16  0 0
TEST.SEQUENCE_NODMAASYNC_6 1 0x0C 2 0x2 16  0 0
TEST.SEQUENCE_NODMAASYNC_7 1 0x0E 2 0x2 16  0 0
TEST.SEQUENCE_NODMAASYNC_8 1 0x10 2 0x2 16  0 0
TEST.SEQUENCE_NODMAASYNC_9 1 0x12 2 0x2 16  0 0
TEST.SEQUENCE_NODMAASYNC_10 1 0x14 2 0x2 16  0 0
TEST.SEQUENCE_NODMAASYNC_11 1 0x16 2 0x2 16  0 0
TEST.SEQUENCE_NODMAASYNC_12 1 0x18 2 0x2 16  0 0
TEST.SEQUENCE_NODMAASYNC_13 1 0x1A 2 0x2 16  0 0
TEST.SEQUENCE_NODMAASYNC_14 1 0x1C 2 0x2 16  0 0
TEST.SEQUENCE_NODMAASYNC_15 1 0x1E 2 0x2 16  0 0  

# Multiplexed 32 bit floats
TEST.AREA_MULTIPLEXED_SEQUENCE_FLOAT 32 0 128 0x2 32 IEEE754 1 RW
TEST.SEQUENCE_FLOAT_0 1 0x00 4 0x2 32 IEEE754 1 RW
TEST.SEQUENCE_FLOAT_1 1 0x04 4 0x2 32 IEEE754 1 RW
TEST.SEQUENCE_FLOAT_2 1 0x08 4 0x2 32 IEEE754 1 RW
TEST.SEQUENCE_FLOAT_3 1 0x0c 4 0x2 32 IEEE754 1 RW
