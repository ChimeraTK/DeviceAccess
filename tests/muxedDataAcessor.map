# A typical DMA example: 32 bytes per block, 16 bit words
TEST.AREA_MULTIPLEXED_SEQUENCE_DMA 0 0 128 0xD 16 -2 1
TEST.SEQUENCE_DMA_0 1 0x00 2 0xD 16  0 0
TEST.SEQUENCE_DMA_1 1 0x02 2 0xD 16  0 0
TEST.SEQUENCE_DMA_2 1 0x04 2 0xD 16  0 0
TEST.SEQUENCE_DMA_3 1 0x06 2 0xD 16  0 0
TEST.SEQUENCE_DMA_4 1 0x08 2 0xD 16  0 0
TEST.SEQUENCE_DMA_5 1 0x0A 2 0xD 16  0 0
TEST.SEQUENCE_DMA_6 1 0x0C 2 0xD 16  0 0
TEST.SEQUENCE_DMA_7 1 0x0E 2 0xD 16  0 0
TEST.SEQUENCE_DMA_8 1 0x10 2 0xD 16  0 0
TEST.SEQUENCE_DMA_9 1 0x12 2 0xD 16  0 0
TEST.SEQUENCE_DMA_10 1 0x14 2 0xD 16  0 0
TEST.SEQUENCE_DMA_11 1 0x16 2 0xD 16  0 0
TEST.SEQUENCE_DMA_12 1 0x18 2 0xD 16  0 0
TEST.SEQUENCE_DMA_13 1 0x1A 2 0xD 16  0 0
TEST.SEQUENCE_DMA_14 1 0x1C 2 0xD 16  0 0
TEST.SEQUENCE_DMA_15 1 0x1E 2 0xD 16  0 0  
 

#The area which is foreseen for DMA transfer can also be accessed via normal
#read/write. As the driver does not DMA control registers in bar 2, we use it
#for this purpose. 
AREA_DMAABLE                     0x00000400   0x00000000    0x00001000    0x2