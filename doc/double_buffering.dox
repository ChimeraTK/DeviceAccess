/*! \page double_buffering_plugin Double Buffering plugin for the Logical Name Mapper
 *
 * This plugin provides a way to read values form the double buffering
 * scheme provided by the firmware. The double buffering mechanism is
 * abstracted away behind a read only register. The plugin is enabled
 * from the LogicalNameMapping xlmap file:
 *
 * \code{.xml}
 *   <redirectedRegister name="bufferedValue">
 *     <targetDevice>(dummy?map=DoubleBuffer.map)</targetDevice>
 *     <targetRegister>APP.0.DAQ0_BUF0</targetRegister>
 *     <plugin name="doubleBuffer">
 *       <parameter name="secondBuffer"> APP.0.DAQ0_BUF1 </parameter>
 *       <parameter name="controlRegister"> ADC.1.WORD_DUB_BUF_ENA </parameter>
 *       <parameter name="statusRegister"> ADC.1.WORD_DUB_BUF_CURR </parameter>
 *     </plugin>
 *   </redirectedRegister>
 * \endcode
 * 
 * This example creates the read only register, `bufferedValue`. Reading
 * this register returns the value from the current active buffer,
 * hiding away the buffer switching and handshaking tasks under the
 * hood.
 *
 * The controlRegister and statusRegister hook into the corresponding
 * firmware double buffering interface.
 * 
 */
