/**
\mainpage mtca4u-deviceaccess

mtca4u-deviceaccess is a device access library which provides an interface for 
for register based devices. Registers are identified by a name and usually accessed though an \c accessor object.

All read and write functions are synchronous, so the functions
are blocking until the data transfer is complete.

\section first_steps First steps

There are some tutorial examples available in the example directory. All examples 
are complete and fully functional.

\li \ref basic_example
\li \ref accessor1d
\li \ref accessor2d
\li Logical name mapping
\li Transfer groups
\li Firmware debugging without map/dmap file
\li Automatic data conversion and raw data access
\li Implementing your own backend
\li \ref dmap
\li \ref mapping 

\page basic_example Basic Example

To use the mtca4u::Device class you need a so called "device map" file (dmap file).
It is created manually and contains information which devices are used in your
application. More information can be found on the page about \ref dmap.

For the beinning all you need is the alias which identifies the device. In the 
\c example.dmap file there is just one entry: MY_DEVICE

\include basic.cpp

Next topic: \ref accessor1d
*/

/**
\example readWrite.cpp
Example how to read and write with DeviceBackend
*/

/**
\example MuxedAccessor.cpp
Example on how to use the MultiplexedDataAccessor.
*/
