# - Config file for the @PROJECT_NAME@ package
# It defines the following variables
# @PROJECT_NAME@_INCLUDE_DIRS : include directories for @PROJECT_NAME@
# @PROJECT_NAME@_LIBRARIES    : libraries to link against
# @PROJECT_NAME@_LIBRARY_DIRS : path to the library directory
# @PROJECT_NAME@_VERSION      : the version of this library
 
# Compute paths
get_filename_component(@PROJECT_NAME@_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)

# There only is one include path, search for it
FIND_PATH(@PROJECT_NAME@_INCLUDE_DIR mtca4u/DMapFilesParser.h 
          ${@PROJECT_NAME@_CMAKE_DIR}/include
          /usr/include/mtca4u)

# There only is one library, search for it
# The "NO_DEFALUT" prevents the finding the library in /usr/lib first. We want to give the
# precedence to the project specific one.
FIND_LIBRARY(@PROJECT_NAME@_LIBRARY @PROJECT_NAME@
  ${@PROJECT_NAME@_CMAKE_DIR}/lib
  /usr/lib
  NO_DEFAULT_PATH
  )
#extract the library dir from the library path
get_filename_component(@PROJECT_NAME@_LIBRARY_DIR "${@PROJECT_NAME@_LIBRARY}" PATH)
 
#Now set the variables to be exported. These are the plural versions as
#for instance more so files might be implemented later.
set(@PROJECT_NAME@_INCLUDE_DIRS ${@PROJECT_NAME@_INCLUDE_DIR})
set(@PROJECT_NAME@_LIBRARIES ${@PROJECT_NAME@_LIBRARY})
set(@PROJECT_NAME@_LIBRARY_DIRS ${@PROJECT_NAME@_LIBRARY_DIR})

set(@PROJECT_NAME@_VERSION @@PROJECT_NAME@_SOVERSION@)

